properties([
    parameters([
        choice(
            choices: ['aws-auth'],
            name: 'Module_Name'
        ), 
        choice(
            choices: [
                'plan',
                'import',
                'statelist',
                'apply',
                'staterm'],
            name: 'Terraform_Action'
        )]
    )
])
pipeline {
    agent any
    options {
        skipStagesAfterUnstable()
    }
    environment {
        HOME = '.'
    }
    stages {
        
        stage('Terraform Init') { 
            steps { 
                echo "Enter File Name ${params.Module_Name}"
                withAWS(credentials: 'rsi-higher', region: 'ap-southeast-1') {
                    script{
                        sh 'terraform -chdir=provider/aws/tier/rsi-higher-env/${Module_Name}/ init'
                    }
                }
            }
        }

        stage('Terraform Action') {
            steps {
                echo "${params.Terraform_Action}"
                withAWS(credentials: 'rsi-higher', region: 'ap-southeast-1') {
                    // sh 'terraform get -update'
                    script {
                        if (params.Terraform_Action == 'plan') {
                            sh 'terraform -chdir=provider/aws/tier/rsi-higher-env/${Module_Name}/ plan'
                        }   else if (params.Terraform_Action == 'import') {
                            sh 'terraform -chdir=provider/aws/tier/rsi-higher-env/${Module_Name}/ import kubernetes_config_map.aws-auth kube-system/aws-auth'
                        }   else if (params.Terraform_Action == 'statelist') {
                            sh 'terraform -chdir=provider/aws/tier/rsi-higher-env/${Module_Name}/ state list'
                        }   else if (params.Terraform_Action == 'apply') {
                            sh 'terraform -chdir=provider/aws/tier/rsi-higher-env/${Module_Name}/ apply -auto-approve'
                        }   else if (params.Terraform_Action == 'staterm') {
                            input("Do you really want to remove this state module.aws-auth-config-map.data.kubernetes_config_map.aws-auth?")
                            sh 'terraform -chdir=provider/aws/tier/rsi-higher-env/${Module_Name}/ state rm module.aws-auth-config-map.data.kubernetes_config_map.aws-auth'
                        } else {
                            error "Invalid value for Terraform_Action: ${params.Terraform_Action}"
                        }
                    }
                }
            }
        }
    
    }

    post {
        always {
            cleanWs()
        }
    }
}
